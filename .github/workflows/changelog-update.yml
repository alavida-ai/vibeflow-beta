name: Auto-Update CHANGELOG

on:
  pull_request:
    types: [ready_for_review]
    paths:
      - 'brand/strategy/**/STRATEGY.md' # Only trigger on STRATEGY.md files

permissions:
  contents: write
  pull-requests: write

jobs:
  update-changelog:
    # Skip if draft PR (shouldn't trigger on ready_for_review, but safety check)
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    timeout-minutes: 15

    # Prevent concurrent runs on same PR
    concurrency:
      group: changelog-${{ github.event.pull_request.number }}
      cancel-in-progress: true

    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0  # Full history for diff analysis
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Detect strategy changes
        id: detect
        run: |
          base_sha="${{ github.event.pull_request.base.sha }}"
          head_sha="${{ github.event.pull_request.head.sha }}"

          # Find changed STRATEGY.md files
          changed=$(git diff --name-only $base_sha $head_sha -- brand/strategy/ | grep 'STRATEGY\.md$' || true)

          if [ -z "$changed" ]; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "No STRATEGY.md files changed"
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "Changed files:"
            echo "$changed"
          fi

      - name: Run Claude Code to update CHANGELOG
        if: steps.detect.outputs.has_changes == 'true'
        id: update
        uses: anthropics/claude-code-action@v1
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          prompt: "/update-changelog"
          claude_args: '--output-format stream-json --permission-mode bypassPermissions'

      - name: Check for CHANGELOG changes
        if: steps.detect.outputs.has_changes == 'true'
        id: check
        run: |
          # Check if CHANGELOGs were modified by Claude
          if git diff --quiet; then
            echo "updated=false" >> $GITHUB_OUTPUT
            echo "No CHANGELOG updates needed (already up to date)"
          else
            echo "updated=true" >> $GITHUB_OUTPUT
            echo "CHANGELOG files updated by Claude"
          fi

      - name: Commit CHANGELOG updates
        if: steps.check.outputs.updated == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Stage CHANGELOG files
          git add brand/strategy/**/CHANGELOG.md

          # Commit with attribution
          git commit -m "docs: update CHANGELOG for strategy changes" \
            -m "ü§ñ Auto-generated by Claude Code based on strategy changes in this PR." \
            -m "Co-Authored-By: Claude <noreply@anthropic.com>"

          # Push to PR branch
          git push origin ${{ github.event.pull_request.head.ref }}

          echo "‚úÖ CHANGELOG updated successfully"

      - name: Comment on PR
        if: steps.check.outputs.updated == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '‚úÖ **CHANGELOG Updated**\n\nI\'ve analyzed the strategy changes and updated the relevant CHANGELOG entries. Please review as part of this PR.'
            })

      - name: Handle errors
        if: failure()
        uses: slackapi/slack-github-action@v1
        with:
          webhook-url: ${{ secrets.SLACK_ERROR_WEBHOOK }}
          payload: |
            {
              "text": "‚ùå CHANGELOG Update Failed",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*CHANGELOG update failed for PR*\n\n*PR:* <${{ github.event.pull_request.html_url }}|#${{ github.event.pull_request.number }} - ${{ github.event.pull_request.title }}>\n*Branch:* `${{ github.event.pull_request.head.ref }}`\n*Error:* Check workflow logs for details"
                  }
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "View Workflow"
                      },
                      "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                    }
                  ]
                }
              ]
            }
