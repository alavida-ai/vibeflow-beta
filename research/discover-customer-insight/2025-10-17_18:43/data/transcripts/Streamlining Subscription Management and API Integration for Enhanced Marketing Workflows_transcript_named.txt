# Streamlining Subscription Management and API Integration for Enhanced Marketing Workflows
# Processed with custom speaker names
# Generated by Vibeflow Speaker Identifier

william: yeah yeah yeah yeah

alexander: okay pause that there you go sorry

william: okay so address description api precursor i'll like like stop presenting this so i can put my information sorry

alexander: let

william: me

alexander: pause this oh you're gonna stop okay good sorry i cool

william: oh yeah yeah um okay so api add payment to buy credits please add payment method to buy api credits okay enter payment method actually um we just got this this was crypto credit cards where you can like add crypto to the credit card you can pay like a regular credit card i mean we we created one specifically for the business i had like another business account like a real like actual mastercard for the company but subscriptions get out of hand and i honestly spend maybe like honestly like a couple of times a year trying to get refunds and subscriptions i just forgot about and i'm getting charged charged so like this this this kind of like helps with that you know you can kind of make separate cards for separate things and when you're out of money you're out of money like like you don't have to keep it just it doesn't like you can refill it or you don't get charged i think that's the biggest thing here

alexander: yeah man one of the things i really regret doing last year when we were setting up the startup at the beginning of entrepreneur first we were like what is like this really big pain point y 'all have and i was just like dude i fucking hate subscription services and i would just love a card or something along those lines that like you know it just checks up with you like hey have you actually used this shit in the last month because about to bill you 40 bucks and you're like no like never again go through

william: the

alexander: process email and stuff and we just found that like there wasn't a unified way to cancel all your subscriptions but now to be honest with those browsers and stuff that can kind of like work like run themselves with your login details they can just deal with the the pain in the ass of having to go through customer service you know because some allow you to just click cancel and you're canceled some have like make you go through customer service i've seen a few that makes you call someone it's just crazy the friction they add right so but i think subscription days are kind of dead now because now you're able to cancel your things pretty easily so it's all paper usage which is great i love that

william: i know i i hope it moves to that direction to be honest um where or it's not like yeah because some people use more some people use you last they should just you know kind of be coincide with that sort of like you know user behavior um especially now since everything's subscription based legit everything

alexander: yeah i mean it

william: should

alexander: just be a payoff it should be like okay we last six months you on average paid 30 bucks a month just pay 30 bucks a month and we'll keep we'll cap it at that right now or whatever it's annoying yeah

william: um okay so i added in the the card um credit balance is i have five dollars remaining i think this is just default they give me five bucks credit five dollars a credit what what would you recommend is like like like a good amount that i i should fill it up like this has to be the minimum amount could just be something that like i don't know what would you suggest i

alexander: usually have like 20 bucks in there at every given time like okay i do that because it allows me to just power through my workflows and i just kind of yeah if i start getting like api denials i just kind of up it up you can you can add some limits as well it could self -adjust like self -update i would kind of stay away from that initially because you just want to get a feeling for how expensive the model is um so yeah 20 so

william: 20 20 20 bucks is like a good month worth of like like messing around

alexander: yeah yeah i think 20 bucks will get you pretty far if you're not doing crazy stuff and then you actually need to change a few things uh i'll i'll show you how to do that as well because if you use sonar pro model api calls then that's going to wipe out your your api requests whereas like just

william: i don't

alexander: know it's fine

william: is sonar pro perplexity's model

alexander: they're all perplexity's models right if it's going through yeah if it's going through the perplexity api so it's perplexity's model i mean what what perplexity has essentially done has it's like it's indexed the web a bit like google did but like uniquely for lms so um sonar pro's version is just like crazy the kind of research you can do but it's fucking expensive and and usually it's only needed for like super in -depth kind of research which i don't think we're going to do at any point to be honest with you so so it was fine

william: so so this perplexity is this purely for so when you say we want to get this api right this this whole api connection is this just for perplexity or is this for all the lms like chat cpt just for perplexity

alexander: so you're you're what you're referring to is like a unified lm provider right yeah

william: okay i i thought i thought this is why we got this is why you chose perplexities because because it can do it on the interface like i saw that you can switch and navigate through lms so this is not the okay so i misunderstood the reason

alexander: no so perplexity you'll you'll be very apparent throughout what we're actually doing now but you know stuff like chat bt research model and clod research there's different difference between the two different kind of modes right so if you just go through chat bt for the latest model it's a reasoning model that's going to give you information on like the latest kind of uh like memory that it has right so if it was trained in january 2025 it will kind

william: of

alexander: have a good contextual understanding of all the world's information until 2025 whereas perplexity it's not trained really to have that kind of like knowledge that's kind of pulled through the world it's more trained to kind of like use google really well so if you have a task which is like okay like why do dolphins make noises you know in september or whatever some random fucking question like that chat bt is fine for that because that's just kind of like contextual knowledge right whereas if you have a question where it's like find the top 10 blog posts that are ranking for this keyword that's perplexity that's going to do that really well because that's like needs up -to -date access knowledge like today um with no contextual understanding so

william: are you saying that perplexity is better at google at this point

alexander: so much better google like

william: even like even like gemini's like i i don't know how well the gym even if there's even uh does even does gemini even index uh the web the way that perplexity does or like it's not like that

alexander: i to be honest with you i'm like to be completely frank i haven't tested gemini super extensively um i kind of hate their api services because they have like i mean we can get into it but basically if you want to know the nitty gritty ai there's in google there's two ai teams one called ai studio and then one called like google ai they're both competing and they couldn't really agree with each other in a few things so they create two different api endpoints so when one like releases a model it doesn't always go to the other api endpoint it's really confusing they haven't figured it out yet which is just insane the bureaucracy of google is slowing it down so i stay away from gemini them all some of them all are really good um but stuff where it's like okay get me like if we have a workflow for example when you want to kind of do the onboarding for a company right and let's say like one of their strategies seo blog posts and you want to kind of get an idea of like where they're ranking right now in google perplexity would do a better job than than gemini which i know sounds kind of crazy but that's because gemini is kind of more as a contextual knowledge like an intelligent model whereas perplexity is uniquely to like navigate google and the web um quickly if that makes sense right so they it

william: does it does they

alexander: have very different tasks at hand and you'll kind of see when we need to use one versus the other uh throughout these workflows it'll make intuitive sense

william: okay all right sounds good so i take it we still need a chat gpt api a cloud api um maybe a gemini api just just going back from your cursor like seeing uh

alexander: the different types you'll get all that from cursor out of the box

william: even gemini yeah

alexander: even gemini so cursor is going to provide you with that unified model that you're talking about right it's going to give you like the ability to swap between 20 different models and like like truly different models across different providers right so you're going to be able to use clods you can use opening eyes you'll be able to use gemini's deep seek whatever model you want perplexity is not one of them for that exact reason because the way that it works is very different so if you were to ask like um how do you say like cursor to start implementing perplexity into it like the the way that it's interacting with the model is like in a super different kind of way so that's why perplexity kind of set up its own way to interact with it through mcps um so that's why this is the only case where we're kind of onboarding a third -party model by itself got

william: it okay so basically what i thought what perplexity was providing cursor already does it we're just adding perplexity to our our our toolbox of loms

alexander: our toolbox exactly our toolbox like well now you have like think about how we're kind of generating this tech stack now for our digital mark well i'm going to call digital marketing for our live marketing uh workflows now we have fire crawl which is like allows you to kind of scrape websites really quickly um which is really like powerful there's a tiny bit of overlap of perplexity because perplexity is like not kind of optimized for website scraping it's optimized for google indexing and google scraping and then we have the contextual models so now with cursor um fire crawl plus perplexity we have this really powerful tech stack that we're going to run through now through this workflow and you'll see how they kind of all come together to really be impressive cool

william: all right cool all right sounds good

alexander: nice nice nice nice so let's see if you don't mind your screen in terms of where you are with the the perplex of the api did you manage to extract it

william: uh no i just got some credits here let's see here uh remained okay so give me five bucks put in 20 bucks and i got 25 dollars of credits then i guess i go to

alexander: is

william: it api group

alexander: you got the api keys now uh on the left hand side yeah there we go then you're going to create a key so let me i'm going to get off my screen here there we go just make sure you have everything okay

william: so i got the api key i guess i have to plug this into cursor yeah

alexander: so i'm just going to send you over uh exactly what you need just trying to see if there's a latest version and

william: i do just on the fire call note i do have i'm logged into fire call to have an api key here and it says mcp integration it gives me a drop down of which cursor um model or cursor uh i guess update

alexander: there's a there's a what sorry

william: there's like um perfect i'm talking we're talking about for our fire call

alexander: yeah

william: let me show you what i have here actually i'll just i'll just uh show the flow window here so do you see my uh um this is like there's mcp integration i don't know if that's that's what you're referring to yeah

alexander: that is that's exactly what we're referring to so let's first is one more tool when you download this will be quick do you have docker on your computer by any chance

william: uh i yeah i think i do one sec no i i loaded docker through the terminal last time oh interesting so you do have docker then

alexander: if you go into your terminal uh yeah

william: then then i should then i should it's not an app though it's like on my

alexander: uh can you just i forgot what it is for mac um it's

william: okay honestly i chat gpt just so if you tell me like what when i need to like look for or command i can just chat gpt open cursor now real quick okay you know what i'm gonna do i'm just gonna like share my full full screen here yeah that's all maybe easier

alexander: sorry i think some guy is smoky weed outside my house it smells like oh yeah sure enough it's my neighbor getting blasted on the monday afternoon

william: okay so are you able to see my my screen yeah do you see like perplexity right now

alexander: i see perplexity yeah you're moving around okay

william: yes uh so you're looking for what are you looking for usually open cursor oh yeah cursor nice

alexander: so what you're gonna do is see what says terminal on the top nav bar all over the top on the mac uh yeah yeah so you get new terminal right and then can you just write uh docker for me there then just press enter okay command not found docker okay cool uh so you're going to go into your browser then you should like google docker and we're going to download it together and then it's going to ask you to download the cli um oh

william: so you know what i think i loaded docker on the server then i hosted end to end i think that's what i did

alexander: oh i gotcha well i mean you kind of want to have it running locally i mean this is where the experimental side of this thing peg is with yeah so download docker desktop uh yeah depends on which chip you have cool yeah so to explain to you why we're doing this right mcps are a core part of our toolbox i mean it's the kind of like way that the lms could communicate with the toolbox and um they're really really powerful but there's like kind of like three different ways to interact the mcps which is kind of frustrating at the moment and no one's really figured out how to unify it just yet but the there's one way where like you allow to do docker and what it's going to do is going to run docker which is it's just kind of hosting like a server on your computer but in an isolated environment so it prevents like anything around with it from within your computer you don't need to download anything extra so it can just kind of import this entire like it's

william: kind of

alexander: like running like an isolated like windows server you know like back in the day you wanted to play like windows game on mac you had to like launch this entire like virtual computer it's doing that on a much more minute scale and like super kind of like isolated and and performant and so because what mcp server is is it is literally that it's running like a little server in a computer right

william: so let me ask you this i have so so what okay so just wait a second what are we doing here like i what are we doing here with docker so we're using docker as a platform to get something or download something install something right yeah something locally

alexander: yeah so what like there's kind of like four different components here so i'm just trying to screw with you um so you can have understanding what's going on when when you play around with it because you're going to want to play around mcps a lot more now right once you understand how powerful they are um so i mean you have your computer here right uh computer oh man why is this so big i have to start on that there we go computer um and then you have your like perplexity let's just let's just look at it through perplexity right so like the way that kind of things happened before when you have lm before the days of like mcp it was like you would have to as a developer you'd have to create like a tool that would be like a hundred percent designed around only implementing like the way that the tool and perplexity can communicate each other so like this is like this communication between the lm saying like do this job and then perplexity saying okay i got your request do the job i'm doing the job this is how like i handle the request now please like deal with it like every single developer every time they create a tool how to do like build it from scratch which made it like a really painful experience for everyone and it led to like super slow development of tool space and then like every time the lm change you have to update the tool call all that kind of stuff so what claude did was it developed like an intro like a um it's a protocol called mcp protocol so it's basically like how http so hypertext transfer protocol it's just a way that we've all agreed that we're going to communicate like this with each other okay so instead of like figuring out how the lm could like communicates perplexity we just said okay the lm we don't give a fuck what you do as long as you're able to like communicate with this mcc mcp protocol then any tool can communicate with you and same for the perplexity tool right like any tool that can communicate through this protocol can communicate with any lm so it kind of like simplified that entire process and

william: like standardized

alexander: it standardized the entire thing right so which is why like we have like lm tools go from you know a few because they need like really sophisticated kind of built -in mechanisms to like you know scaled up massively anyone can make it super easily um so now what we have the only way you can run mcp it's not just a protocol it's a server itself right you actually need to run a server somewhere on your computer that can actually handle the logic of dealing with this request here right so it's actually a server

william: so so so that means that um this like cursor and everything can only work on my on my local machine um if i set it up as if i set up a local mcp server is what you're saying

alexander: curse no cursor can work completely fine by itself if you want to interact mcps though it needs to be able to run through yeah

william: so so could i so so given that i have this this uh server um that i set up any end and on right could i technically also set up the mcp server on the same server

alexander: yeah so

william: for example like the reason why is that i i have two laptops so i've got this mac and i've got a windows right and and i interchange um kind of like so if i'm on my windows and i have my my mac set up for the mcp server i would need to have my mac on and online right to maybe chance like connect to it from my windows laptop

alexander: no more specifically i mean you could just run it from your windows locally because the mcp itself like this doesn't actually have any memory right so it doesn't need to have under like you don't need to standardize it across your mac and your windows if you just have two separate servers running it's still going to be completely fine it just needs like a little bit of cpu or of your like computers compute in order to operate so you have to set the server now with that said like there's a layer of complexity here which i'm not really mentioning which is that like there are third -party providers now like a good example is smithery um that kind of hosts these servers for you throughout the box and then they just kind of give you a command so if you want to use like exa search as one you go like that and then you just press connect and they'll give you like this code to run and they'll like inject itself in the cursor for you so that's completely fine um but the issue with perplexities is that like this is maintained by the community um and like you

william: never know if it's going to go down or not or how much support is going to get in the future exactly

alexander: exactly so we have to use the official perplexity kind of documentation here and according to the official perplexities documents or this is actually hosted by perplexity itself they want you to run it through docker um so what's going to happen here right is that what you're basically doing is that on your computer you're literally just creating a docker instance and by way docker is going to like remove all the complexity of running a server so it sounds scary but you're basically going to run docker and then it's going to literally host the server for you it's going to host the server right here for you at every time and then all you're going to do is just point it in the right direction which i'll show you how to do that very easily and now you have like your server running in docker like you can turn your computer off nothing's going to happen you can turn it back up and i'll just like run docker again and i'll be fine and yeah docker was great

william: okay so so so for example on on those mcps those tools that you mentioned in the last flowchart right you had like the yeah these mcp services right yeah um are those those are not hosted on this mcp server is it

alexander: they are they

william: are

alexander: so well sorry it depends again right because they all have like the protocol is the same but the way they're being hosted kind of depends on the people who made it which makes it a little bit annoying and i wish it was different but it's just the reality of the world that we live in some allow you to run it through like call it npx which is just like it'll run code for you in the background you don't even think about it it's usually the simplest others will allow you to run it through like uh it allows you to like kind of like give a url and then like that's how nan allows you to run its mcp tools it literally just gives you a url and then it's hosting the server in the cloud and you're sending requests back and forth and you don't really give a shit where it's coming from which i personally think is by far the best way to handle mcp calls because you don't need to deal with this kind of complexity here unfortunately um perplexity doesn't allow that neither does fire crawl like if you go to fire crawls mcp here you'll see that like the way they want you to kind of host the mcps is through mpx so you see like there's like a lot of variety in this space so we're just kind of handling it between us right now right like you just need to have docker and then you just need to have mpx download it and you'll be able to handle every single mcp tool pretty much out of the wall so

william: okay so so the and the reason i'm asking this uh is because like for this example right some you're saying some mc how some mcps are handled or through let's say like let's say requests right that are hosted somewhere else some you have to actually kind of self -host right they don't have the request feature they have to self -host in this instance where let's say i have two computers or maybe they got one computer and i'm in one part of the world the other computer that has a bunch of this mcp setup so another computer do i have to now have both computers set up the same way for example this mcpx do i have to install this both of my windows and mac

alexander: yeah so i mean you just if you just have node so npx and docker installed you'll be able to everything will be fine everything will be handled for you that's like the only two kind of requirements you have outside the api keys of course which usually figure out a way like you know one password share between yourself or whatever um but yeah if both computers have docker and both computers have mpx then you're going to be able to handle all these mcp tools pretty easily unless you host some of a third -party provider at which point you don't really give a shit um

william: okay so is there is there any advantage of me uh if i have docker on my on this web server i have right yeah what what like is there an advantage of still doing still integrating this stuff locally mcp server locally

alexander: um yeah i think just more simple to be honest with you like you you don't really gain an advantage the way i would look at it is i don't gain an advantage from running it on a server like there's no advantage for my microsoft computer and my apple computer to be interacting with the same mcp server because it's they call it stateless which means like there's no running memory in it right if it was like a server that like a database server then of course you know you'd have to share it between each other but it isn't it's just a kind of like one -off running server that just has a set of rules instructions okay

william: yeah i understand okay okay

alexander: cool

william: all right sounds good so uh docker has been downloaded it's just installing right now

alexander: okay six six six

william: uh let's

alexander: see yeah i mean look they're there there the space is moving super quickly um someone's going to come in and create like a super i mean someone already has right create super easy hosting environments um for mcps and hopefully we standardize it around hp requests but

william: yeah

alexander: as long as you're learning hopefully as well right is kind of the priority so yeah

william: yeah and and like especially in the infancy of this all happening you get a feel for before all this stuff gets abstracted away in the future yeah like you get a feel for how this all works behind the scenes right well

alexander: all of computing is an extraction like yeah

william: yeah

alexander: it's pretty crazy i think most software engineers have no idea the fuck's happening inside the computer right now and we might maybe it's like 30 guys who've been there since like 1950 who kind of understand like that there's always a point where if you go to like a lower level of abstraction you just you're just like oh okay this is now magic you know what i mean because you just don't no longer understand it just like we're all we're all our own different level and uh

william: yeah yeah

alexander: who cares uh

william: should i get a login for this do you uh for docker i guess i should

alexander: uh yeah if you if you have a docker hub is what they usually ask you for um it's free it's no pain it's like it's like having a github repo okay okay

william: so okay i'm in

alexander: nice okay cool uh so if you run docker on the terminal again like you did last time for cursor does it actually beautiful okay we're good we're set nice um okay now to download this do you have brew installed new computer by any chance well

william: what

alexander: if you just type b -r -e -w in your computer in your terminal that you have installed okay that allows us install node okay cool so if you just run when you send this to the chat if you just run this in your computer what that's doing is it's downloading something called like homebrew which is a package manager that allows you to install node which allows you to run npx so you need to run the entire thing uh from not just the uh sorry just the command from like oh yeah you want to check make sure that's not i'm not hacking into oh

william: no i i was just curious what this link was yeah yeah i just opened up this like

alexander: no i'll send

william: you

alexander: let me just send you the official link as well so you can actually see what's going on as well this is what it is and it's not just sent you like a suspicious link here we go open up the thing i just sent you in google meets so that's homebrew okay

william: so so what does this do like in a nutshell

alexander: so this is like you're going to download something called node which is basically uh like javascript um the ability to run javascript with your computer um and homebrew is a package manager because once you start entering the world of code we have these things called packages like firefox as a package or open ai is a package that allows you it's basically just like a lot like logic as code bundled into some sort of executable um and back in the day you'd have to basically download people's code and like host it somewhere in your computer and like if they

william: updated

alexander: it somewhere it just became fucking chaos so package managers allow you to like do it in a very easy way so yeah

william: yeah i i used to double around the linux kind of little linux when you download software you kind of have to do the same thing right oh gotcha yeah yeah exactly exactly okay uh okay so i thought this would this is what docker does though

alexander: yeah so i mean this is where the this is where the annoying part about the environment comes in like fire crawl doesn't allow you to run it through docker they insist on you running it through node so if you just download node and docker you're now able to cover pretty much all your bases

william: okay okay so uh so i need to install this

alexander: yeah so you just if you run that kind of like curl command from the home library uh from that from the the website you sent you where it says like copy paste this into your kind of terminal uh then it'll it'll install it for you you

william: almost out

alexander: of

william: the

alexander: way

william: this is checking for sudo access which may request password do i need my like what password uh oh my computer password to download home group press

alexander: enter by the way this whole setup stuff this is where like 90 percent of like marketers kind of give up i think or or beginning coders as well like i remember when i started learning how to code i went through this shit and i was like this is impossible like that it's not worth it uh okay

william: i can see most markers being what what the yeah exactly so this is

alexander: where the advantage kind of comes in right so we're all yeah so you see where it says run these commands you turn up in your terminal to add homebrew to your path let's you just quite paste that from echo onwards down to like eval uh and then run that for your terminal uh this

william: right here

alexander: the get rid of the top line so just just echo where it says echo yeah there we go there we go you can't paste that like

william: that

alexander: yeah press enter nice and then uh close your terminal so the x the x on top for the top right right there for your terminal uh yeah nice so

william: so this like if i were to recommend windows computer i'd have to tell us the same steps pretty much

alexander: yeah what we can do is after this call since i'm recording it i'll turn into a transcript and i'll just generate like a document step by step for you to come

william: on perfect that'd be great that'd be great yeah perfect nice

alexander: okay um now we're good okay if you go into cursor again and then open up the terminal again the reason we had to close terminal so it could reboot itself then you open up a new terminal nice and then now you literally just run brew install node node like that yep uh unknown command brew oh shit to brew not to brew not run okay let's see let's understand why let's see can you try running this just send it to your google meets let me try it again try brew install again oh all right i just saw why it says in tall sorry install oh

william: sorry it's my fault and uh install brew install node right yeah sick i'm sick pushing down that's perfect

alexander: so like from a super high level you've installed the package manager so this is like the guy that makes sure that all your packages are uploaded updated if you want to improve like increase the version of it if they release the latest version and you and you're using this package like 40 projects can you imagine doing that back in the day like going package by package and making sure like this he's just like doing it all for you which is great um okay cool and then yeah node very simply allows you to run javascript code uh okay now can you do just check it's word great working uh npx just type npx in there nice and then just enter okay so it's not can you try uh node okay second can you try uh npm i'm sorry npm is

william: it name it

alexander: oh

william: i'm

alexander: sorry you're in node okay can you just do exit just type exit please uh or just uh control c nice okay then you can try it to type in npm again oh

william: sorry npm no

alexander: worries you're good okay and then i sent you one last command which oh wait no sorry uh

william: is that the one the one you sent to uh this one npm install dash g npm at latest yeah try that one this just gets like the latest updates yeah

alexander: and then type npx again

william: let's

alexander: see right yeah okay cool all right yeah just control c again i'm sorry exit just exit my bad it says it tells you to type my bad all right i think we're good let's uh let's uh let's actually use this for our vibe coding now my marketing uh all right nice we're in so now we have docker running now we have npx running we're able to host all the different mcps let's add our first tool which we need the prophylaxis tool so sorry

william: sorry just one one thing on this um is brew just for mac or is it also for windows brew is just for mac brew is just okay so so i'd have to get like the the window the windows alt for that

alexander: yeah so i would literally when you're going through this just ask claude or chatry t like i want to download node and use npx on my windows computer what's the best way to do that and then just follow

william: that

alexander: that's like the only goal is just having npx running because

william: yeah yeah do you use the back

alexander: do i what sorry

william: well what do you use a mac i take it

alexander: i use mac yeah

william: yeah okay yeah

alexander: okay cool so now we're going to actually use our first kind of like mcp so if you go into the chat settings so you want to do you can you can go to oh this is all on cursor by the way you can close your terminal for the for the sake of simplicity and then just do command l that's a little short key that allows you open up your chat interface by the way so what you can do is you can go to the three dot ellipsis up there so it allows you to open up like chat settings in the top right corner yeah then go to chat settings and then we're going to go to tools integrations sick and then we're going to add custom mcp so now what we're doing is we're going to start adding the servers so that we're able to actually use them so do you want me to just send you the stuff to write or would you like me to like kind of walk you through how i approach doing it through the code like actual like researching an mcp okay extracting the information you know that kind of stuff would you want me to just send it to you so you can start using it maybe

william: maybe yeah send it over high level doesn't have to be crazy high level of kind of explaining yeah explaining so i understand the reason why i think i think this might be a good exercise for me too is that i want to do this on my windows and i think i'm going to do it like once you give me the transcript or like the high level um like details i can attempt to do this on a windows so that i can i get a better practice on this and then maybe i'll even install it for for crystal cool uh on her end as well

alexander: awesome so okay i've just sent you on the chat uh on the chat the stuff you want to load right there cool nice so high level what this is doing is you're giving the instructions so do

william: i do sorry do

alexander: i delete this part here no you put it inside the mcp server part

william: so like right here

alexander: yeah inside the curly brackets oh

william: okay

alexander: uh yeah right there then you just copy paste it there nice and you can just do uh command s should format that for you and then get rid of the uh the comma at the end

william: this right here yeah

alexander: yeah and now you're going to get your api key from perplexity and you're going to click paste into that and

william: then and command

alexander: save cool and then you can close it now you close where it says mcp dot json great and then let's see this is zero tools enabled uh let's see why not tonight so you see how it's recognized it now what it's going to do is going to run it locally and see if it's working so right now it says zero tools enabled for some reason to be fair it actually also says that for myself right now so i'm going to one i'm going to debug it on my computer to know why that's happening um i understand why they're with me i wonder if they have like an update or something like that if you have a key all right let's just for whilst i fix that let's just have you be able to use the fire crawl one as well so let's see the fire is

william: uh does your note taker also um have the comments so i can get the or should i these uh command lines or should i um like the mcp server details or should i just copy and paste them now

alexander: yeah i would copy paste these probably for the best this this

william: version worked for some reason if i sorry just clear if i if i get a refund and subscription really for perplexity this has nothing to do with the api stuff right because i just say i already bought the credits this is just for the subscription yeah yeah you'll be fine with the api stuff okay

alexander: so i've sent you two commands here so take the last one for plexity and copy paste that one move to the api key stuff again unfortunately but okay so going to the tools it's in chat settings again so the ellipse at the top right nice and then tools integrations cool and then go into edit or yeah right there nice so you want to just replace that with what i just said here you are going to have to get the api key again so you want to get rid of the top low brackets so get rid of the yeah actually copy paste the api key first over nice and then yeah get rid of i would distribute yeah that part yeah there we go great and then one of the brackets at the bottom as well yeah okay beautiful and let's see uh command

william: save

alexander: yeah command save and go out let's see if it worked i would just toggle it on and off the uh sorry in the mcp tools so command out wait

william: a minute

alexander: that's a short key then go back to chat settings and then tools integration and then toggle it off the the green toggle and then toggle the back on let's see i don't know why it's not working uh can you try the fire crawl one as well please

william: yeah i

alexander: suspect i'm just forgetting a step here uh

william: do i put this at like right here

alexander: like

william: that

alexander: yeah so you want to do it yeah you put it below essentially but you get rid of um let's see you kind of want to put it right under that blue one up top because it's basically a list of uh of mcp servers so

william: you went to fire call one on top uh above the npx one

alexander: yeah i mean it doesn't really matter if it's above or below but as long as you put a comma there oh

william: like that yeah

alexander: yeah

william: then you

alexander: replace

william: the api

alexander: key i wonder why the npx stuff's not working i'm just not

william: so they i have mcp integration i have cursor for 5 .6 and for 8 .6 do i have to check my cursor um uh model uh version

alexander: yeah i guess let me just check my cursor model so mine is 1 .24 which one so yeah you have the latest one so then i would just go with uh 0 .48 .6

william: okay this one's more in the format of this mcp thing anyways yeah exactly i guess i guess do i need all these brackets or or just okay what

alexander: i

william: what

alexander: i say you already basically does that so what you have inside right now is is literally just that code or not code it's json but that json output if you go into your cursor settings like we had before you'll see that exact uh that exact um yeah the fireflies piece up there so that's right if you look at the fire crawl mcp one at the top right there it's the exact same one so you just remove the stuff you just probably paste it into there yeah yeah all you gotta do is uh add your api key which is up there at the top in uh in fire crawl right right above that you don't you don't need that anymore because we already added that

william: oh sorry you're right okay so fire call command npx so this part here too dash y this stuff here

alexander: no the api key at the top right there where you see where it says fire crawl api key we need to replace that with our real api key which is right there yeah okay

william: oh so we don't need this card at all no no

alexander: we

william: don't because i already sent it to you

alexander: yeah sorry i thought i shouldn't be supposed to uh cool and then there's some white space you want to get rid of so just go where that comma is you just want to get rid of it this right here yeah yeah those two nice cool then command save see how that works if not you do some debugging nice nice nice and then uh command l should

william: i

alexander: enable disable yeah you can disable the perplexity one for now okay i wonder why it's not running weird if this ain't working once it go through

william: is it is it the mcp service not

alexander: running yeah it just seems like it's not able to access the npx uh stuff and i'm just going to replicate this in my computer to try to understand why not i'll try and see the diva console prepare with

william: no worries

alexander: okay i managed to get the same error in my computer which is good okay can you can you run this on your computer real quick in

william: your in your

alexander: terminal yeah turn it on nice okay and then you're gonna just have to do just go ahead and run this before and then copy actually i'm going to give you my api key okay whatever uh i

william: can i can i can use buy though fine though if i have one just

alexander: for the sake of testing it's fine i'll just send it to your chat okay just run yeah that whole line yeah and then just uh do tap up twice and press the up button on your keyboard twice there we go

william: and press enter yeah

alexander: press enter so it's running uh so that's weird then ctrl c let's just let's just turn off cursor and like restart cursor maybe it might just be that so just go to cursor then just like

william: just like go back like quit and come back

alexander: quit and go back

william: okay press

alexander: on cursor again cool uh let's go into chat settings press tools integration oh okay they work all right show the restart sometimes it's like it's like hitting the tv and then that works all right so now it's working so now you have you have both your tools set up properly um so let's test it quickly so let's go to the chat sorry

william: sorry sorry you just said like like like if i were to set this up let's say again oh they got another computer right once i add these mcp servers yeah just like just do like like uh like a like a reboot of cursor and it should work yeah was there anything my question is was there anything that you did to troubleshoot that like in term in terms of the command that kickstarted that process so

alexander: i literally took it into my terminal right and i was i just kind of ran it like the code like i had you run and it basically since it's running it locally there was no server that was running so by not restarting that like by not restarting cursor we were like hey here's the tool calls and i was like what what tool calls but then when you restalled it restarted it booted it up and then now it has the tool calls ready for you um okay

william: so just so just to restart that to do

alexander: yeah just restarting it sometimes it'll get you pretty far so let's just test them to see if they both work so let's let's test perplexity first um let's say like use perplexity to find the top 10 best articles on by marketing okay

william: so do i have to like switch to perplexity

alexander: uh right now it's an agent mode and it's an auto mode so let's get out of mode so click on auto you see where it says auto there right yeah there you go uh let's take yeah to turn it off and then just put cloud force on it so this allows you to have control of which models you're using okay cloud force on it is great um and now it says yeah actually let's just do a little fun case i say which mcp tools do you have access to just ask it that so

william: it's able to actually uh see that yeah

alexander: currently only available to paid users oh are you paying for cursor

william: uh it said give me a a trial like uh i'm happy to pay for it now i i didn't pay for let me see

alexander: it's fine because

william: it

alexander: said you could try the try to try the other model then try the um um let's just try gbd uh 4 .1 yeah the the you can toggle down so if you go back to the toggle stuff

william: why why is claude 4 claude thinking oh that's just regular yeah i took okay do all models so then i can do this girl can you see okay uh address model okay cool so then i can go back to here the search you can go uh

alexander: gbd 4 .1

william: yeah or okay does it make it doesn't matter 4 .1 4 .0

alexander: no it's up to your preference so you'll you'll just see throughout your workflows you really like the responses if you are the ones yeah you'll develop preference for sure down the line i i think claude's models are just incredible for human writing but yeah

william: so

alexander: what's giving this basically this is where you're starting to understand how like how you're you're in that analogy i gave you last week when i was like you have the model and you're giving it the toolkit that it needs to be able to perform some of the tasks so what the mcp is basically doing here it's saying like all right man here are your tools and uh this is when you use them so when you start performing activities with these kind of like agents and you ask it to use a tool and you might not even necessarily have to ask it to use a tool but it sees in each request you make the kind of context that it has so it could be the previous chat history as well as tool calls so if it's a powerful reasoning model like clause you know it's going to be able to be like make conclusions that we're interacting with google or we have like a really in -depth research question it might be best to use perplexity in this case right but by the way it's going to ask you before you do it which is great because it won't just run off and use

william: all your credit it's going to ask it's going to confirm or ask me should i use perplexity for example yeah okay yeah

alexander: so let's use perplexity so let's um let's say let's use the perplexity mcp to research the top 10 articles about live marketing explain them and include citations right so now if you open that up you just toggle that up where it says calling perplexity yeah yeah just press that uh before you run the tool before you run it yeah just press that open so what that is it's basically when you define an mcp server the tool server for example you're defining the kind of input it expects right because if it's communicating a certain way we need to standardize the input so when we write a tool server or an mcp tool we say our input needs to look like this at which point it's messages with role and content role and content so this is actually the gpd model reading the schema that needs to match determining based off the question you just asked it what that like what should we actually put in the schema to best achieve your goal and now it's triggering the tool calls kind of giving it the information it needs to do its thing and so if you press run tool now it's now kind of taken the request it's reasoned what to do with the tool calls that disposal and it's passed off the baton the baton

william: so for this rule and content these are default right yeah like these are by default and then do you are you able to create your own custom rules and let's say content like um like values

alexander: well you you wouldn't this is more about how perplexity expects to receive the information right and so you really wouldn't want to change that what you really want to change is the content i mean like let's read let's read the system if you just scroll to the right there like what the remember gpt4o is giving it making a tool call and this is the information it's giving the tool right so if you go into that the where it says calling perplexity ask and then you like you like scroll to the right so you can see up yeah there we go or just scroll up scroll up in

william: the

alexander: car inside they're calling perplexity ask in the tool call yeah scroll up there like look what look what it's done right you said use perplexity fcp to research top to articles of live marketing including citations and now it's basically saying it's looked at the tool calls at disposal it looked at what kind of like input it's like requesting or the kind of input that it needs and then it said like okay you need to provide detailed research and citations and then i want you to research top 10 articles of live marketing include citations so it's like literally the equivalent of you inputting this prompt into perplexity like like you were doing before when you have the 20 subscription and you want to use perplexity it's the exact same you're doing it through the mcp so it's running the tool for you

william: all right so so and the reason i'm asking that question is that let's say later down the road where going back to this whole um like i like like having let's say this rag system of let's say different specific books trained on very specific specific categories on marketing could i have let's say for like an mcp server that's focused on let's say positioning for example or some sort of tool let's say like you know um like like just for creative reasoning whatever it is but then it understands its role as like here i see as you are a helpful assistant being like you know you're an expert marketer in this category using the principles from this rack system or not the rack system this book for example which retrieves it from some sort of knowledge base like i guess the question i'm asking is that can these be changed and modified to route to different things and be different roles so you're you're like

alexander: you're 100 on the ball right now right in terms of the kind of stuff you can do i need let me ask can i answer that question after you use the fire call mcp because you'll get more context then i'll answer the question okay

william: yeah

alexander: okay so now now you response right so now let's do um let's use the firecrawl mcp to scrape digital first .ai you know where it says digital first .ai it's

william: good for digital first is that like uh

alexander: you see where it says what is biomarketing digital first .ai

william: yeah i see so

alexander: you should pass it in yeah there we go

william: yeah article

alexander: just no no don't write article just write the digital first or yeah it's gonna it's gonna scrape the website and uh and then then say like explain to me what the business does or whatever so let's open up that tool call like we did last time the one that the bomb in there calling fire scroll crawl scrape using yeah open that up cool so you notice that the input is different now like it's

william: not the

alexander: same as before that's because the tool call has now defined its own schema right so firecrawl is different from perplexity it has a different input that it needs so this is now using the firecrawl api tool right so if you press run tool and run the tool it's gonna use your api key to do it yada yada yada we're happy cool and so if you just look at where it says result in there so just scroll down yeah right so notice this is really important to understand all we've got we haven't actually got like the idea what the business has done right because firecrawl doesn't do that it's not an ai agent it's a web scraper right what it's actually done is just scraped the website for you and then pulled in all the context from the website as markdown and gave it to you as a result and so you've done it's achieved its tool call it scraped it for you then with all those contextual understanding and the information the ai agent gbd4o has now used the kind of information from the website to give you your answer so it's pulled in the context of the tool call and now it's giving you your answer does that make sense like how firecrawl was not the agent here but gbd4o was the agent but you still need firecrawl to get the context needed to answer the question

william: yeah

alexander: yeah yeah so to answer your question that you asked before why did i want why did i want you to use firecrawl first the inputs are different right so let's say we make this rag system if the rag system accepts semantic research like how perplexity accepts it which is like find me the best uh books that we have on copywriting then i'll find you the best books as a copywriting but if we define it in a different way which is just like i don't know like three different fields and one of the fields is like type and it's like type equals copywriting that's also like completely valid right it's just how we define the tool call and i'll define it when i build out the system it's completely fine but it's the point the point is right like the really the mental model here just giving the tools at the disposal of the ai system to achieve the objective you want and then how the tool is defined is fine as long as it's in the schema and then the ai mall will be able to work with it

william: got it okay i understand that that actually clears it up a lot that makes a lot of sense sick yeah

alexander: so let's go through do you have like 10 minutes yeah

william: yeah

alexander: okay sick so let's go through this workflow then and let's like actually see how this works with vibe marketing and where your time is now going to start to get saved massively after all this setup bullshit so let's press plus so we have a new chat interface our new chat cool and then let's just on the left hand side there where it says marked uh analysis .md first let's go to full screen for the sake of i

william: can close the terminal box right yeah

alexander: you can close the terminal box it's all good yeah okay let's uh let's do this with um the business that you mentioned what was the name of it again

william: uh it's like so a k a v e

alexander: a k a b e okay is it does it have

william: a

alexander: website

william: yeah they just launched uh a coffee dot cloud

alexander: a k a b dot cloud i'm gonna google it real quick okay so let me just share my screen with you real quick this this is where you're gonna see my weakness comes in as a marketer okay but i'm gonna just pretend that i know what the fuck i'm doing when it comes to marketing for a little bit and you you just tell me like nah this is bullshit let's assume that it copies your client and they're like you know help us with their seo strategy um i already pretend that they won't help the seo strategy you kind of want as part of the onboarding process to develop a contextual understanding of the business is you

william: kind of

alexander: want to know like what's this value offering what services to provide who are competitors in the space all that kind of stuff right and you you'd have to read through this documentation you kind of have to get an idea what's the pricey yada yada yada uh long shit which i don't think it probably offers that much information that much value but anyway regardless if you prefer to do it manually it's also fine but if you want to get like a really rough idea and save all the context of this business you want to kind of scrape the website and you also kind of want to research it like on google or whatever um you also want to read the blog post that's already have the they've already written so far right because you want to understand like what is that current state of content marketing what is the current state of the seo post and that gives you more of an understanding of the tone of voice as well right this is the tone of voice so far how do we expand on it yada yada yada uh if there's like linkedin uh x whatever the fuck so you kind of want to develop all this and pull this into like a centralized repository of information so that we can use this downstream instead of call you pasting it down the line you can have it all in a single place so this is the coolest workflows what you do just using two tools a disposal and and you're going to start to see like when we integrate any end workflows down the line customized workflows this shit gets pretty crazy pretty fast pretty powerful so i'm trying to give you the mental models you need to just use that kind of genius marketing brand of yours and and envision the power of what we can build so so let me hand it back over to you do you want to mind sharing your screen again

william: yeah uh yeah um you want to close to open up cursor here yeah cursor okay

alexander: so let me just get this full screen for myself again uh cool so let's copy paste that prompt there where it says use the perplexity mcp to research at website url and just put that into the chat interface yeah and then just uh oh when you when you call your pace by the way you call your pace with shift or else it's going to do that thing which is kind of annoying the problem it's great for code but the problem is really annoying

william: oops so they do do i just go copy like that you said shift c like shift control or shift command i

alexander: think it's shift command uh let's just see yeah yeah

william: yeah yeah

alexander: so you you you still command this

william: comes up this terminal

alexander: oh no when you do when you do command c it's fine so command c by itself and then when you go into the chat just press command shift v okay okay and then just replace the website url with uh the akave website do

william: i have to do the https uh no no just

alexander: do at because when you do when you do at eight and then akave dot cloud um yeah so use perplexity mcp let me just let me just read this um oh and then put and fire crawl mcp okay and then just press enter i've never done it with gpd 4o before i wonder if it's gonna be powerful enough to to understand this kind of shit usually i do in squad but we'll see which

william: which version of cloud do you use

alexander: sonnet

william: or yeah

alexander: uh

william: press try

alexander: again i wonder what it kind of times out right there it's weird cool uh let's just open up the query and see what it's okay so it's literally using the research mode so yeah press run tool i'm happy with that if you are sure so like why would you not use chat reti just to put in this prompt because chat reti doesn't have like the deep research google understanding right like let's say a copy dot cloud came out a week ago it wouldn't have understanding okay cool so calling fire crawl search open that up yeah let's just

william: see

alexander: what it

william: was

alexander: doing there we go so this is using fire crawl search service as well fire crawl search is kind of like playing a little bit into the perplexity space a little bit because it's now allowing you to actually crawl google by itself and this is like the actual top results of google but anyway it's used both so yeah so

william: so in this instance why why why did it call fire call versus perplexity for for that for that kind of like i'm just saying target audience competitors it

alexander: called both because i think it realized i had both tool calls at its disposal and it was like okay well we'll get more comprehensive kind of input if we do both um okay so yeah i mean that looks pretty good so it's so again like my the prompts i've given is super like high level you can go super in depth with this and have it do like competitor research and you could be like use perplexity to research competitors and then fire crawl to scrape their websites to identify their icps and like you know their value offerings and put all that into a document but we'll get to that point later on um yeah

william: sorry sorry just just like um is there so how do you prevent hallucinations or content that's inaccurate so this is probably your best way to do it

alexander: is the way that it's kind of like actually pulling in real information from google um and not kind of inventing it are you seeing any hallucinations here

william: now i i have to confirm with crystal if like for example notably users let's say notable users like notable cloud like notable users is kind of like a like it's it's basically cloud storage for enterprises right so users this is like notable customers i have to see if the defiant which i i wasn't aware of which i'm curious to see if that this is correct or not um do you want

alexander: to ask it ask what like just ask how it knows that the defiant is a notable user

william: like even a user like i this in this context is really like a notable customers right yeah i think so i think that's what it means he's a customer you

alexander: realize he fucked up and he's backtracking yeah

william: okay early that's right early adopters like the defiant so he's taking it from early adopters to upload to read permissions okay i know the define was okay good so it is accurate in that sense that's good

alexander: cool sick i mean again that's the benefit of using these tool calls right because you're basically pulling in the context it needs and perplexity and fire crawl are not going to hallucinate because not inventing information they're getting it from google so if google's wrong then fair enough that's something else but do you get what i'm trying to say though like you're not just asking the model to use it's kind of like memory like

william: contextual knowledge

alexander: yeah that's where you get the hallucination like world

william: yeah uh one question here you know how gemini has a larger context the model has a larger context window than others how come it's the same here like gemini pro is is 120k context window versus like everything else i

alexander: think gemini 2 .5 pro does it actually have more than 180k uh let's see it has a million i wonder why i mean maybe that might just be a cursor of the notation to be honest with you it's possible but to be honest with you i think it's kind of good practice that you're not able to use a shit ton of context window because that's when you really get into massive hallucination territory but yeah i'm sure they'll kind of adult okay

william: it looks like my cloud works by the way i don't know what happened before cloud four well actually let me see um so so basically right now i have two tools right i have fire call and have perplexity yeah and then i have access now to all the llms which i think with this plan i'm on a trial like of all those pro trials but one it's like two weeks i can get you know the main one uh whatever like that it's like 20 bucks a month or whatever um and then we're good and then now in terms okay so we're good with this uh just like like should i be thinking about what what tools i need for the next session

alexander: yeah i mean no i know i want to think about tools i would think about capabilities and then we think about how we build the tools around that okay because

william: if you

alexander: think about tools you start to get into like shiny object syndrome where it's like right right be so sick that's true it's like no like what are the objectives like what is truly going to move the needle here um and like what do we need to get to that point it's like you know you mentioned down like down the line or in the initial scope that you gave me through the email like this idea of onboarding to identify tone of voice across different socials models look that's going to require a custom mcp tool right that extracts the accounts off x uh linkedin whatever it might be and put it into a database and then allow you to easily access it for analysis uh from your model so that would be your own custom tool

william: yeah okay so so maybe then i should be looking into like a get mural or like i have a mural just like drop a few mirror reports on basically trying to like mod like like like what my let's say manual workflow is in terms of like how do i approach from like from scratch as a brand strategist to like for for a brand understanding let's say brand fundamentals understanding how you can drive a content um a content strategy around that and then derive actual content pieces so there's like a foundational part of like okay what is let's say like the brand and its core the fundamentals right value propositions mission and vision what they stand for all that all that fun stuff and that that gets synthesized or that what gets developed after is maybe a content strategy taking all those let's say uh value propositions you bucket them into let's say content pillars and then how does that connect to let's say what the audience really wants right but they're targeted out to the customers or pain points the pain points the pain relievers how do these content pillars kind of connect to all those stuff you bucket into that and then you create like a tone of voice about like what's the personality of the brand right well like how does it talk how does it feel you know what's its outlook what does it say what doesn't it say blah blah blah all that stuff right um i before you know the world of ai i would have to do that that's what that would take weeks to do to do a proper one right um a lot of workshops a lot of research competitor analysis all that stuff right with ai and everything that that went from weeks to maybe like a couple of days i've done like i've done actual full stack like brand from start to finish and content strategy in like four days right something that would legit take uh weeks with a lot of phone calls right whereas you know now with this i again there's always going to be a human element i think that's good that it is right unless we get to a point where like there's no human involved and it comes it comes up but that's maybe like as as you point agi or asi right super intelligence right but but we're at a point where it's still augmenting how humans use it it's just how well can you augment it for humans right and so now i have to think about so why i mentioned that that phase where it would take me still a couple of days with ai to replace the weeks of doing it can i can i get it down to a couple of hours yeah

alexander: i don't see why not right because whilst we go through this process we're going to identify what really moves the needle here right like and i think what we agreed upon early on which is like a design principle like an approach that we're going to take is of like enabling human the loop because this is what we've just done right now in that initial workflow was the kind of like initial research you want to do right and you kind of saw something oh i did and i was a user whatever that might be that's an interesting insight because you might have you know thought of something about that user or whatever you might want to go a bit more of a deep dive down there and like think more about like how that user is applicable and how that might infer a strategy or whatever you know that if you automate that entire process you lose out on that ability do so and kind of like follow those chains of of thought and and logic um so we would kind of want to enable that throughout the road but that kind of shit where it's like there's a kind of like two principles here if you've done it once you want to make sure that it's it's it's saved in a place in a way so you don't do it again so if you do the research stuff right how do we output the information and structure it so that you never need to do that the initial baseline research again you don't lose a file somewhere you have that that contextual understanding for the rest of the duration of the project right so at the moment as i mentioned before for the case of simplicity we're starting off with file based so if you go on cursor um after this call now whatever up to you and just say like okay turn this into a research report what's going to do it's going to turn into a research report and then add it to your file system to the left so now you have that context so any questions you add down the line are going to be if you reference it enabled or enhanced with that context right

william: before before we get off the call could we like would that take five minutes just to kind of go over because what i can do is maybe maybe do that and then maybe the between now the next call maybe get like mess around with it get it to a point where i got that maybe mini database so then we can you know work off that i

alexander: i think i think let's do it now and then you should just so you can get that like okay i kind of get it i want you to output the file into your local file system and i want you to use the file for a second workflow so now we're kind of establishing the value of this closed loop system and i don't mean closed

william: loop

alexander: is a fancy term here i mean initiate workflow initiate task information pulled in complete it so the information is pulled back into the initial state right and so now you kind of have an output that you can just send it around so let's share your screen with me real quick and then we can go through that yeah together sick so unless you have any other questions here right or whatever

william: just is it still is it still 200 bucks build that api pricing

alexander: uh the max mode 200 bucks yeah the max mode

william: okay okay all right anyway so that's a digression okay so uh all right let's let's do it well what do you need from me

alexander: say like turn this into a research report and include citations and then you can structure the research report right like this is where your marketing brain kind of comes in like you know maybe at the top you want a summary of what the business does what's his value proposition who are his notable clients whatever it might be so that you can send it over to crystal really quickly and and if you include the citations you can read the citations as well up to you

william: okay so i can take to the research report include sources um let's just keep it simple for other there's other things i want to do like that's actually not web 3 because a lot of this information here was web 3 related where i wanted to yeah like even the compet these thing is yeah these competitors are our competitors but there's actually other competitors not mentioned here but i'll i was gonna ask it's fine you know i'll do this on my own time to kind of do this well

alexander: i mean that's exactly

william: what you do

alexander: right like you you wanted this the human loop value and then like you might establish that there's like some subsequent workflows you want to kind of go through and we're going to identify those workflows one by one and we'll automate them where they need to be all

william: yeah

alexander: you know again that's what we're trying to figure out

william: yeah yeah i mean that's where the vibe where the vibe marketing comes in the vibe is the person there right vibing whether this is going to work or not right when you remove the vibe i imagine it becomes like auto marketing and that's when the agent just does everything there's no human to live at all yeah i

alexander: don't think it's going to be that interesting to be honest with you like maybe

william: yeah

alexander: maybe it can who knows i i i yeah i can't really predict

william: okay so okay so let's do this so we want to add let's say we get this report and then we have to save this to a file base is that what you're what we're doing yeah so literally just press yeah enter that slowly

alexander: right this

william: is the message okay i'll i don't know what i'll get the the pro i thought that i had a a trial but it's fine i'll get it after the call

alexander: okay so you can do it yeah you just press that you press search you just said that again see what it says top right press on it not on the top right sorry the um on the on the tab where you sent the initial turn this into your report uh

william: am i am i on this

alexander: screen or another screen the the original chat screen press where it says turn this into your research report include sources yeah press that and then just press send again bottom right

william: oh i see oh cool you can edit okay got it i

alexander: wonder why it's not just uploading entry cursor uh just say uh that's really strange say save it save it to my files do

william: i how do i do that

alexander: uh just say uh create this and turn this to a markdown just like that just just tell it to

william: oh just say just like save it

alexander: to mark where

william: what does that mean save it to markdown it's uh it's the file format so it knows what to save it to okay oh it's dot md markdown yeah okay well

alexander: you just press accept so you go to your files directory on the left there the file directory so let's create like a new chat and then just do uh yeah that's already in the content you see how it's in the context right there because you you actually opened up the chat um instance like working at the file so here let's just for let's be explicit about it you just you either put add context or you just put like the at symbol and then just type type in the file gotcha there you go so this is like the very very early version of this right i mean it's limited in this code but you can get very far with this

william: could i so last question can i make folders like a i could say a file structure you have folders you got these markdown files in the fly in these folders and then let's say i have one folder called the kave one folder called um i don't know call it uh you know brand strategy whatever right yeah and then that's that's that's different or brand that's different than maybe the content right the brand has all brand fundamentals all all the stuff on brand can i can i call can i add sign a folder and then that is uh it includes everything all those md files in that folder that's exactly it that's exactly what it does

alexander: yeah

william: so if you go a new folder and i call this the cave and then i call this new folder i call this branches just for the sake of this yeah oh this one how come how come i did this

alexander: uh you might open that folder in the other folder so you just want to pull it out you just drag it out drag it out into the

william: oh oh i see oh okay

alexander: so if you just drag it out and then pull it into like the root folder kind of area yeah there you go

william: okay and then oh but it's still doing that

alexander: try that again let's see uh no it's it's it's in the uh it's in brand now oh you can just delete it delete the if you want to get brand outside the cover

william: no no i i i just want to have it so just like a windows explorer or like like the right this goes down okay so like okay so for example let's say i do this i make this so like that's fine let's just as an example so if i go here and i type in brand oh okay got it like that and then i can ask it whatever or like whatever my prompt is i can include this folder and then it will take into context all the md files in that folder absolutely oh nice okay

alexander: cool and like yeah i mean you'll see the crazy shit you can do down the line but you can add some called rules so if you add like a dot cursor file within each folder when you and you when you add the folder it will basically before making any action it will read the rules of the folder so like let's say like hey in this folder this is our brand folder so any research you do has to be scoped to these three files and we like our research to be as like in this template so whatever you generate make sure it's this template so this is when you start kind of getting like this reproducibility and like finer control i mean like it's like kind of you know windows having like intelligent context so that anytime you add a file to windows it'll be like yeah sorry mate like this is not how we deal with this folder like we have rules here follow our rules

william: yeah yeah okay that's that's interesting yeah that's good okay good okay so i'll start to think about that as well right in terms of uh because like i think in a way it's like a mental workflow you take for granted when you do something it's just how you approach something yeah like maybe the rules are kind of like that right you got the context but how your approach is different right yeah um cool awesome man uh i appreciate this this is great um i'll um when when when you're available this week for for our next one i'll i'll make sure i kind of mess around with this yeah and uh and if there's anything that i need to do you need me that i need to do before the next week to get prepared for anything like is there anything right now that i should write down

alexander: um i think think about the model that i just introduced to you here right and like how we're giving the model two things context and tools and how far you can get with just that right right now it's just two two tools um see how far you can get using perplexity and fire crawl um and saving the files into these strategy folders whatever folders you want and then like use them as context for like other questions and i'm sure your file systems will just blow up in size which it's a limitation of this which i'm kind of i'm creating a solution to that but we'll get around that later down the line um

william: and

alexander: see how far it gets there because then you're going to get used to this kind of closed loop system and the power of what you're dealing with becomes super evident and and then you're going to start identifying things where it's like the limitations of it right and once you start getting identifying the limitations that's when you you deal with custom workflows or you find other tools which already exist um so see how far you can get with it in terms of achieving the kind of stuff you want to achieve in the onboarding and and be like super clear why it didn't work and what exactly didn't work and where you got kind of confused all that kind of stuff um because that'll give me like my ability to kind of help you as much as i can and then we can start i think we should like create a good notion file between us and we start mapping out this kind of design into the system and like scoping out the different workflows that we need and prioritizing them all that kind of stuff

william: okay that sounds good yeah yeah i'm on my way i already got a whole bunch of ideas especially even the stuff that we know right now but since as you know marketing evolves especially now with that where that means happening um how can we like the context of what chat gpt and sauna whatever right there is a date like a date in which it doesn't know anymore has to go to the web and stuff to understand the new stuff right yeah imagine imagine if we start to create this database of very very new cutting edge marketing let's say tactics tools or whatever it is like tactics and and and even for example the evolution of how copywriting has has been you know in terms of like yeah there's the principles are like first principles right but how people are expressing those first principles right having that that context how we can train it right with a file maybe a folder of different ways on on how people would say again writing great content for a specific niche it's not one fits where i wrote out but how do we actually extract that depending on the niche you know and how to create those contexts and how we how we do that yeah i i i there's there's a lot of things i'm just thinking about i'll write them down too no it's exciting

alexander: i i know where we want to i know we want to head to right and like this is great because my background overlaps exactly of this really well like the the the concept of like data engineering comes in play in ai engineering and building out these ai models as i mentioned like our first call fine tuning comes last but it moves the needle incredibly but the reason why it comes that last because there's so much leg working you put in before yeah right and that means you need to set up the data systems in place to capture it that means so we need to have like history of like really good tone of voice examples and history of really bad tone of voice examples like what does that even apply it implies like a data system which is inputting and capturing all your tweets over time and kind of pulling performance metrics and seeing like what resonates what doesn't once we're happy with that we're like okay the model is good 80 percent of time let's get to 100 percent of time 99 percent of time right that kind of stuff but there's so many steps ahead of it like as you mentioned strategic onboarding which already gets you really far like i've been

william: doing this

alexander: for a month and a half now like it gets me pretty far but there are massive limitations at the moment and that's because my marketing understanding is not strong enough

william: imagine imagine if we create also this is this may want to find this is all maybe fine tuning things um i totally agree with the legwork the legwork has to be done first um imagine if we create our own like self -grading content let's say evaluation right where when things get published it starts to create this history of it and understands okay how many what is your percentage of let's say this content pillar you're putting up right versus this one right maybe if we can extract even engagement scores around that kind of like maybe like maybe a version of your ebs score that you've done to scrape by twitter understand okay what content pillars resonate the most which ones don't and this and that and sometimes some of the content pillars may not have the most engagement but they're still very important to tell the story of the brand right so it's not just about oh only go the highest performing you gotta have to you know but understand that and then and then every month right based on the criteria create let's say your own report card of of your own content um like based on all these criteria of of your own content right engagement's one of it but also just the quality of it right and and even how recent or maybe it's like you're you're you're saying it's good to say the same thing multiple times in different different ways right but maybe you're kind of like beating a dead horse too much maybe you want to go and have that kind of self -awareness it's almost creating an ai that you know everyone has like blind spots but having an ai that can cover those fine spots after your content marketing you know yeah

alexander: absolutely i think there's gonna be some crazy we can do here like right now we're just scraping the service we're trying to establish like the mental models here you're going to play around with it you're going to find the limitations and my job is to architect the system in such a way so that we can enable this kind of workflows down the line right like

william: yeah

alexander: yeah i i know from a technical perspective what we need to achieve what you just talked about right but there's a lot of in the middle where it's like i don't know like kind of like business logic understanding i don't have my marketing without a marketing background you know and so i'm just trying to create a tool no

william: i mean this is this is why this partnership is like you know this is this is why it works this is this is great

alexander: cool yeah so yeah uh for let's do wednesday if you're free if you're free on wednesday let's continue the schedule like three times a week i think is aggressive and good because it gives breaks for you to try it out try over the weekend whatever the hell and then like hydrate on it um and uh yeah i uh then come back to me with like where you saw the limitation like what was kind of annoying actually you know what would be really great would be like if we had a shared notion of like pain points you know i mean like you just kind of drop down your thoughts and be like this fucking sucked like what the hell like what's going on here because that allows me to like build the tooling around that it makes my life a lot easier um yeah

william: for sure so if you want to create a uh an ocean thing invite me my email it's the same william and non -citizen .io that's my notion account for this

alexander: yeah

william: and then i can like log log you know any information any insights i have for you

alexander: sure yeah that'd be awesome that'd be awesome i appreciate that we'll talk about it awesome

william: cool all right alex have a good rest of your day uh 10 uh two o 'clock your time on wednesday sounds good loving the timing all right see you later all right okay see you

